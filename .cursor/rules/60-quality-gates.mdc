---
description: Code review and merge quality gates
alwaysApply: false
---

# Quality Gates

## Core Requirements

1. Build: `yarn build` must succeed before merging.
2. Types: `yarn type-check` must be clean (no errors).
3. Lint: `yarn lint` with zero errors (warnings acceptable if justified).
4. Tests: Add/adjust tests for new logic; no unrelated test breakage. Critical features require comprehensive test coverage.
5. Security: No secrets committed; env keys documented.
6. Performance: No obvious N+1 or unbounded queries introduced.
7. Accessibility (frontend): New UI components must have labels/roles as appropriate.
8. Backwards Compatibility: Migrations are additive; note any breaking changes explicitly.
9. Docs: Update README / SCHEMA.md / ENVIRONMENT docs for changed public behavior.
10. Review: Keep PR scope tight; include summary + checklist mapping to these gates.

## ✅ Authentication Standards (ESTABLISHED)

- **Authentication**: All authentication flows must be tested. OAuth implementations must use proper upsert patterns. ✅
- **Database**: Prefer Prisma Client operations. Document any raw SQL usage with clear warnings about potential issues. ✅
- **Testing Coverage**: Authentication integration tests required (5/5 passing) ✅
- **Error Handling**: Proper ApiError usage and consistent error messages ✅

## UI/UX Quality Gates

- **Design Consistency**: Follow `docs/UI_DESIGN.md` component taxonomy and patterns
- **Feature Flags**: Use established feature flag patterns for incomplete features
- **Accessibility**: Keyboard navigation, focus states, ARIA labels as required
- **Responsive Design**: Test on mobile/tablet/desktop breakpoints
- **Error States**: Provide loading, empty, and error states for all data interactions
